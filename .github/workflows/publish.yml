name: publish

on:
  push:
    branches: ['master','release']
  release:
    types: ['published']

concurrency: ${{ github.ref }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: qemu
        uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v3
        with:
          flavor: |
            latest=false
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Semantic versioning from our tags
            type=semver,pattern={{version}}
            # tag the sha version unless we are a git tag
            type=sha,enable=${{ !startsWith(github.ref, 'refs/tags/v.*') }},priority=300,format=long,prefix=
            # tag the branch name if it's master
            type=raw,value=master,enable={{is_default_branch}}
      - name: update version
        run: |
          echo "const version = \"${{ steps.meta.outputs.version }}\";" > client/src/version.ts
          echo "export default version;" >> client/src/version.ts
      - name: push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
